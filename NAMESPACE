# Generated by roxygen2: do not edit by hand

S3method(.cal_binary_table_breaks,data.frame)
S3method(.cal_binary_table_breaks,tune_results)
S3method(.cal_binary_table_logistic,data.frame)
S3method(.cal_binary_table_logistic,tune_results)
S3method(.cal_binary_table_windowed,data.frame)
S3method(.cal_binary_table_windowed,tune_results)
S3method(any_equivocal,class_pred)
S3method(any_equivocal,default)
S3method(as_class_pred,default)
S3method(as_class_pred,factor)
S3method(cal_apply,cal_object)
S3method(cal_apply,data.frame)
S3method(cal_apply,tune_results)
S3method(cal_estimate_beta,data.frame)
S3method(cal_estimate_beta,tune_results)
S3method(cal_estimate_isotonic,data.frame)
S3method(cal_estimate_isotonic,tune_results)
S3method(cal_estimate_isotonic_boot,data.frame)
S3method(cal_estimate_isotonic_boot,tune_results)
S3method(cal_estimate_logistic,data.frame)
S3method(cal_estimate_logistic,tune_results)
S3method(cal_estimate_multinomial,data.frame)
S3method(cal_estimate_multinomial,tune_results)
S3method(cal_plot_breaks,data.frame)
S3method(cal_plot_breaks,tune_results)
S3method(cal_plot_logistic,data.frame)
S3method(cal_plot_logistic,tune_results)
S3method(cal_plot_windowed,data.frame)
S3method(cal_plot_windowed,tune_results)
S3method(cal_validate_beta,rset)
S3method(cal_validate_isotonic,rset)
S3method(cal_validate_isotonic_boot,rset)
S3method(cal_validate_logistic,rset)
S3method(cal_validate_multinomial,rset)
S3method(cal_validate_summarize,cal_rset)
S3method(format,class_pred)
S3method(is_equivocal,class_pred)
S3method(is_equivocal,default)
S3method(is_ordered,class_pred)
S3method(is_ordered,default)
S3method(levels,class_pred)
S3method(obj_print_data,class_pred)
S3method(obj_print_footer,class_pred)
S3method(obj_print_header,class_pred)
S3method(print,cal_binary)
S3method(print,cal_estimate_isotonic)
S3method(print,cal_multi)
S3method(print,cal_regression)
S3method(reportable_rate,class_pred)
S3method(reportable_rate,default)
S3method(required_pkgs,cal_estimate_beta)
S3method(required_pkgs,cal_estimate_logistic_spline)
S3method(required_pkgs,cal_estimate_multinomial)
S3method(required_pkgs,cal_object)
S3method(threshold_perf,data.frame)
S3method(type_sum,cal_binary)
S3method(vec_cast,character.class_pred)
S3method(vec_cast,class_pred.character)
S3method(vec_cast,class_pred.class_pred)
S3method(vec_cast,class_pred.factor)
S3method(vec_cast,class_pred.ordered)
S3method(vec_cast,factor.class_pred)
S3method(vec_cast,ordered.class_pred)
S3method(vec_proxy_compare,class_pred)
S3method(vec_proxy_equal,class_pred)
S3method(vec_ptype2,character.class_pred)
S3method(vec_ptype2,class_pred.character)
S3method(vec_ptype2,class_pred.class_pred)
S3method(vec_ptype2,class_pred.factor)
S3method(vec_ptype2,factor.class_pred)
S3method(vec_ptype_abbr,class_pred)
S3method(which_equivocal,class_pred)
S3method(which_equivocal,default)
export(.cal_binary_table_breaks)
export(.cal_binary_table_logistic)
export(.cal_binary_table_windowed)
export(any_equivocal)
export(append_class_pred)
export(as.factor)
export(as.ordered)
export(as_class_pred)
export(cal_apply)
export(cal_estimate_beta)
export(cal_estimate_isotonic)
export(cal_estimate_isotonic_boot)
export(cal_estimate_logistic)
export(cal_estimate_multinomial)
export(cal_plot_breaks)
export(cal_plot_logistic)
export(cal_plot_windowed)
export(cal_validate_beta)
export(cal_validate_isotonic)
export(cal_validate_isotonic_boot)
export(cal_validate_logistic)
export(cal_validate_multinomial)
export(cal_validate_summarize)
export(class_pred)
export(is_class_pred)
export(is_equivocal)
export(make_class_pred)
export(make_two_class_pred)
export(reportable_rate)
export(required_pkgs)
export(threshold_perf)
export(which_equivocal)
import(ggplot2)
import(rlang)
import(vctrs)
importFrom(generics,as.factor)
importFrom(generics,as.ordered)
importFrom(generics,required_pkgs)
importFrom(magrittr,"%>%")
importFrom(pillar,type_sum)
importFrom(purrr,map)
importFrom(stats,as.stepfun)
importFrom(stats,binomial)
importFrom(stats,glm)
importFrom(stats,isoreg)
importFrom(stats,median)
importFrom(stats,predict)
importFrom(stats,qnorm)
importFrom(utils,head)
importFrom(yardstick,j_index)
importFrom(yardstick,sens)
importFrom(yardstick,spec)
